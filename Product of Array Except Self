//first approach

class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
    int n=nums.size();
    vector<int>ans(n,1);
    vector<int>prev(n,1);
    vector<int>next(n,1);
    for(int i=1;i<n;i++)
    {
        prev[i]=prev[i-1]*nums[i-1];
    }
     for(int i=n-2;i>=0;i--)
    {
        next[i]=next[i+1]*nums[i+1];
    }
     for(int i=0;i<n;i++)
    {
        ans[i]=prev[i]*next[i];
    }
    return ans;
    }
};

//second approach


class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
    int n=nums.size(),i=1,suffix=1;
    vector<int>ans(n,1);
    while(i<n)
    {
        ans[i]=ans[i-1]*nums[i-1];
        i++;
    }
    while(i>0)
    {
        i--;
        ans[i]=ans[i]*suffix;
        suffix*=nums[i];
    }
    return ans;
    }
};
